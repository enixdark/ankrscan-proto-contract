syntax = "proto3";

package com.clover.extractor;

option java_package = "com.clover.proto";
option java_outer_classname = "ExtractorProto";

option go_package = "./;proto";

/**
 *  _____       _   _ _   _
 * | ____|_ __ | |_(_) |_(_) ___  ___
 * |  _| | '_ \| __| | __| |/ _ \/ __|
 * | |___| | | | |_| | |_| |  __/\__ \
 * |_____|_| |_|\__|_|\__|_|\___||___/
 *
 **/

message Contract {
  string blockchain_name = 1;
  string address = 2;
  string name = 3;
  int32 decimals = 4;
  string symbol = 5;
  ContractStatus status = 6;
  ContractType type = 7;
  string logo = 8;
  double usd_price = 9;
  double market_cap = 10;
}

message CmcAsset {
  string symbol = 1;
  string logo = 2;
  double usd_price = 3;
  double market_cap = 4;
}


message TokenBalance {
  Contract contract = 1;
  string value = 2;
}

enum ContractStatus {
  UNKNOWN = 0;
  FOUND = 1;
  SCANNED = 2;
  VERIFIED = 3;
}

enum ContractType {
  TYPE_UNKNOWN = 0;
  TYPE_GENERAL = 1;
  TYPE_ERC20 = 2;
  TYPE_ERC721 = 3;
  TYPE_ERC1155 = 4;
}

/**
 *        ____  ____   ____
 *   __ _|  _ \|  _ \ / ___|
 *  / _` | |_) | |_) | |
 * | (_| |  _ <|  __/| |___
 *  \__, |_| \_\_|    \____|
 *  |___/
 *
 **/

service NftIndexer {
  rpc NftBalanceByAddress (NftBalanceByAddressRequest) returns (NftBalanceByAddressReply);
}

message NftBalanceByAddressRequest {
  bytes address = 1; // wallet address e.g. 0x134acfa283884ae586f96e24d40dd6c894a620bb
  string blockchain_name = 2; // check https://github.com/Ankr-network/ankrscan-constants
  string page_token = 3; // field to support pagination
  int32 page_size = 4;
}

message Nft {
  string blockchain_name = 1;
  bytes smart_contract_address = 2;
  bytes content = 3; // image or gif or maybe video
  // also attributes, price, token name, token ID, collection name should be represented here
}


message NftBalanceByAddressReply {
  repeated Nft nfts = 1;
  string next_page_token = 2; // field to support pagination
}

message GetCmcAssetBySymbolRequest {
  string symbol = 1;
}

message GetCmcAssetReply {
  CmcAsset asset = 1;
}

message GetContractRequest {
  string blockchain_name = 1;
  string address = 2;
}

message GetContractReply {
  Contract contract = 1;
}

message GetBalanceRequest {
  string address = 1;
}

message GetBalanceReply {
  repeated TokenBalance balances = 1;
}

message GetChainInteractionsRequest {
  string address = 1;
}

message GetChainInteractionsReply {
  repeated string chains = 2;
}
