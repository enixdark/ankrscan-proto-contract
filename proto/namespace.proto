syntax = "proto3";

package ankrscan.namespace;
option go_package = "./;proto";

enum FoundationDbNamespace {
  /*
  stores blocks and transactions bodies.
  keys: Blockchain-BlockHeight-BlockHash for blocks and Blockchain-BlockHeight-BlockHash-TransactionIndex for transactions
  values: proto.Block (contains block headers with transactions)
  */
  BlocksNamespace = 0;

  /*
  keys: Blockchain-TransactionHash
  values: keys of transactions in StorageNamespace
  */
  TxByHash = 1;

  /*
    keys: Blockchain-BlockHash
    values: keys of blocks in StorageNamespace
  */
  BlockByHash = 2;

  /*
    keys: Blockchain-BlockHeight
    values: keys of blocks in StorageNamespace
  */
  BlockByNumber = 3;

  /*
    stores blocks of canonical chain
    keys: Blockchain-BlockHeight
    values: keys of blocks in StorageNamespace
  */
  CanonicalChain = 4;

  /*
    stores extractors configs
    keys: extractor ID
    values: proto.ExtractorConfig
  */
  ExtractorConfig = 5;

  /*
    stores consumers offsets
    keys: consumer ID
    values: committed block height
  */
  ConsumerOffset = 6;

  /*
    stores the latest block header of canonical chain
    keys: Blockchain
    values: proto.BlockHeader
  */
  LatestBlock = 7;


  /*
    stores balances of exact NFT by the wallet
    key structure:
      * 4 bytes - length of the encoded blockchain name
      * x bytes - encoded blockchain name
      * 20 bytes - wallet address
      * 20 bytes - contract address
      * n bytes - tokenID as encoded as big.Int
    values: big.Int in bytes - amount of NFTs (0 or 1 for ERC721, and any number from zero up to Solidity uint256 for ERC1155)
  */
  BalancesNamespace = 8;

  /*
    stores details about the contract
    key structure:
      * 4 bytes - length of the encoded blockchain name
      * x bytes - encoded blockchain name
      * 20 bytes - contract address
    values: proto.NftType
  */
  ContractDetailsNamespace = 9;

  /*
    stores details about the contract
    key structure:
       * 4 bytes - length of the encoded blockchain name
       * x bytes - encoded blockchain name
       * 20 bytes - contract address
       * n bytes - tokenID as encoded as big.Int
    values: proto.NftAttributes
  */
  AttributesNamespace = 10;
}
