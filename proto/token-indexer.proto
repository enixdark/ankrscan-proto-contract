syntax = "proto3";

package ankrscan.tokenindexer;

option go_package = "./;proto";

service TokenIndexer {
  rpc BalanceByHolder (BalanceByHolderRequest) returns (TokenBalancesDetailed);
}

enum TokenType {
  UNDEFINED = 0;
  NATIVE = 1;
  ERC20 = 2;
}

message BalanceByHolderRequest {
  bytes wallet = 1;
  string blockchain_name = 2;
  bytes page_token = 3;
  int32 page_size = 4;
}

message TokenBalancesDetailed {
  repeated TokenBalanceDetailed balances = 1;
  bytes next_page_token = 2;
}

message TokenBalancesReply {
  repeated TokenBalance balances = 1;
  bytes next_page_token = 2;
}

message TokenBalanceDetailed {
  string blockchain_name = 1;
  bytes contract_address = 2;
  string name = 3;
  uint64 decimals = 4;
  string symbol = 5;
  bytes holder_address = 6;
  bytes balance = 7;
  TokenType type = 8;
}

message TokenContractDetails {
  string blockchain_name = 1;
  bytes address = 2;
  string name = 3;
  uint64 decimals = 4;
  string symbol = 5;
}

message TokenBalance {
  string blockchain_name = 1;
  bytes contract_address = 2;
  bytes holder_address = 3;
  bytes balance = 4;
}

message TokenContractRequest {
  string blockchain_name = 1;
  bytes address = 2;
}

message TokenBalanceRequest {
  string blockchain_name = 1;
  bytes address = 2;
  uint64 block_height = 3;
}

message TokenLiquidPoolDetails {
  string blockchain_name = 1;
  bytes lp_token_address = 2;
  bytes token0_address = 3;
  bytes token1_address = 4;
  bytes factory_address = 5;
}

message LiquidPoolUpdated{
  string blockchain_name = 1;
  uint64 block_height = 2;
  uint64 transaction_index = 3;
  uint64 log_index = 4;
  uint64 timestamp = 5;

  TokenLiquidPoolDetails liquid_pool = 6;

  bytes token0_reserved = 7; // big float
  bytes token1_reserved = 8; // big float

  bytes base_token0_price_usd = 9;
  bytes base_token1_price_usd = 10;
}
