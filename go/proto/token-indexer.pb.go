// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: token-indexer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenType int32

const (
	TokenType_UNDEFINED TokenType = 0
	TokenType_NATIVE    TokenType = 1
	TokenType_ERC20     TokenType = 2
)

// Enum value maps for TokenType.
var (
	TokenType_name = map[int32]string{
		0: "UNDEFINED",
		1: "NATIVE",
		2: "ERC20",
	}
	TokenType_value = map[string]int32{
		"UNDEFINED": 0,
		"NATIVE":    1,
		"ERC20":     2,
	}
)

func (x TokenType) Enum() *TokenType {
	p := new(TokenType)
	*p = x
	return p
}

func (x TokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_token_indexer_proto_enumTypes[0].Descriptor()
}

func (TokenType) Type() protoreflect.EnumType {
	return &file_token_indexer_proto_enumTypes[0]
}

func (x TokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenType.Descriptor instead.
func (TokenType) EnumDescriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{0}
}

type Peg int32

const (
	Peg_NO_PEG     Peg = 0
	Peg_NATIVE_PEG Peg = 1
	Peg_USD_PEG    Peg = 2
)

// Enum value maps for Peg.
var (
	Peg_name = map[int32]string{
		0: "NO_PEG",
		1: "NATIVE_PEG",
		2: "USD_PEG",
	}
	Peg_value = map[string]int32{
		"NO_PEG":     0,
		"NATIVE_PEG": 1,
		"USD_PEG":    2,
	}
)

func (x Peg) Enum() *Peg {
	p := new(Peg)
	*p = x
	return p
}

func (x Peg) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Peg) Descriptor() protoreflect.EnumDescriptor {
	return file_token_indexer_proto_enumTypes[1].Descriptor()
}

func (Peg) Type() protoreflect.EnumType {
	return &file_token_indexer_proto_enumTypes[1]
}

func (x Peg) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Peg.Descriptor instead.
func (Peg) EnumDescriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{1}
}

type UsdPricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*UsdPriceRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *UsdPricesRequest) Reset() {
	*x = UsdPricesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsdPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsdPricesRequest) ProtoMessage() {}

func (x *UsdPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsdPricesRequest.ProtoReflect.Descriptor instead.
func (*UsdPricesRequest) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{0}
}

func (x *UsdPricesRequest) GetRequests() []*UsdPriceRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type UsdPricesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prices []*UsdPriceUpdate `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
}

func (x *UsdPricesReply) Reset() {
	*x = UsdPricesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsdPricesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsdPricesReply) ProtoMessage() {}

func (x *UsdPricesReply) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsdPricesReply.ProtoReflect.Descriptor instead.
func (*UsdPricesReply) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{1}
}

func (x *UsdPricesReply) GetPrices() []*UsdPriceUpdate {
	if x != nil {
		return x.Prices
	}
	return nil
}

type BalanceByHolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet         []byte `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
	BlockchainName string `protobuf:"bytes,2,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	PageToken      []byte `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize       int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *BalanceByHolderRequest) Reset() {
	*x = BalanceByHolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceByHolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceByHolderRequest) ProtoMessage() {}

func (x *BalanceByHolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceByHolderRequest.ProtoReflect.Descriptor instead.
func (*BalanceByHolderRequest) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{2}
}

func (x *BalanceByHolderRequest) GetWallet() []byte {
	if x != nil {
		return x.Wallet
	}
	return nil
}

func (x *BalanceByHolderRequest) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *BalanceByHolderRequest) GetPageToken() []byte {
	if x != nil {
		return x.PageToken
	}
	return nil
}

func (x *BalanceByHolderRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BalancesDetailedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balances      []*BalanceDetailed `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	NextPageToken []byte             `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *BalancesDetailedReply) Reset() {
	*x = BalancesDetailedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancesDetailedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancesDetailedReply) ProtoMessage() {}

func (x *BalancesDetailedReply) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancesDetailedReply.ProtoReflect.Descriptor instead.
func (*BalancesDetailedReply) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{3}
}

func (x *BalancesDetailedReply) GetBalances() []*BalanceDetailed {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *BalancesDetailedReply) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type BalancesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balances      []*Balance `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	NextPageToken []byte     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *BalancesReply) Reset() {
	*x = BalancesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancesReply) ProtoMessage() {}

func (x *BalancesReply) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancesReply.ProtoReflect.Descriptor instead.
func (*BalancesReply) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{4}
}

func (x *BalancesReply) GetBalances() []*Balance {
	if x != nil {
		return x.Balances
	}
	return nil
}

func (x *BalancesReply) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName  string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	ContractAddress []byte `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	HolderAddress   []byte `protobuf:"bytes,3,opt,name=holder_address,json=holderAddress,proto3" json:"holder_address,omitempty"`
	Balance         []byte `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{5}
}

func (x *Balance) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *Balance) GetContractAddress() []byte {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *Balance) GetHolderAddress() []byte {
	if x != nil {
		return x.HolderAddress
	}
	return nil
}

func (x *Balance) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

type BalanceDetailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName  string    `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	ContractAddress []byte    `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Name            string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Decimals        uint64    `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Symbol          string    `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	HolderAddress   []byte    `protobuf:"bytes,6,opt,name=holder_address,json=holderAddress,proto3" json:"holder_address,omitempty"`
	Balance         []byte    `protobuf:"bytes,7,opt,name=balance,proto3" json:"balance,omitempty"`
	Type            TokenType `protobuf:"varint,8,opt,name=type,proto3,enum=ankrscan.tokenindexer.TokenType" json:"type,omitempty"`
}

func (x *BalanceDetailed) Reset() {
	*x = BalanceDetailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceDetailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceDetailed) ProtoMessage() {}

func (x *BalanceDetailed) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceDetailed.ProtoReflect.Descriptor instead.
func (*BalanceDetailed) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{6}
}

func (x *BalanceDetailed) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *BalanceDetailed) GetContractAddress() []byte {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *BalanceDetailed) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BalanceDetailed) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *BalanceDetailed) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BalanceDetailed) GetHolderAddress() []byte {
	if x != nil {
		return x.HolderAddress
	}
	return nil
}

func (x *BalanceDetailed) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *BalanceDetailed) GetType() TokenType {
	if x != nil {
		return x.Type
	}
	return TokenType_UNDEFINED
}

type CurrencyPeg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	Address        []byte `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Peg            Peg    `protobuf:"varint,9,opt,name=peg,proto3,enum=ankrscan.tokenindexer.Peg" json:"peg,omitempty"`
}

func (x *CurrencyPeg) Reset() {
	*x = CurrencyPeg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyPeg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyPeg) ProtoMessage() {}

func (x *CurrencyPeg) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyPeg.ProtoReflect.Descriptor instead.
func (*CurrencyPeg) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{7}
}

func (x *CurrencyPeg) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *CurrencyPeg) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CurrencyPeg) GetPeg() Peg {
	if x != nil {
		return x.Peg
	}
	return Peg_NO_PEG
}

type CurrencyDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	Address        []byte `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Decimals       uint64 `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Symbol         string `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *CurrencyDetails) Reset() {
	*x = CurrencyDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyDetails) ProtoMessage() {}

func (x *CurrencyDetails) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyDetails.ProtoReflect.Descriptor instead.
func (*CurrencyDetails) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{8}
}

func (x *CurrencyDetails) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *CurrencyDetails) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CurrencyDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CurrencyDetails) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *CurrencyDetails) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type CurrencyMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Thumbnail string `protobuf:"bytes,1,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
}

func (x *CurrencyMetaInfo) Reset() {
	*x = CurrencyMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyMetaInfo) ProtoMessage() {}

func (x *CurrencyMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyMetaInfo.ProtoReflect.Descriptor instead.
func (*CurrencyMetaInfo) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{9}
}

func (x *CurrencyMetaInfo) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

type CurrencyDetailsExtended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName string            `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	Address        []byte            `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Name           string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Decimals       uint64            `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Symbol         string            `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	MetaInfo       *CurrencyMetaInfo `protobuf:"bytes,6,opt,name=meta_info,json=metaInfo,proto3" json:"meta_info,omitempty"`
}

func (x *CurrencyDetailsExtended) Reset() {
	*x = CurrencyDetailsExtended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyDetailsExtended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyDetailsExtended) ProtoMessage() {}

func (x *CurrencyDetailsExtended) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyDetailsExtended.ProtoReflect.Descriptor instead.
func (*CurrencyDetailsExtended) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{10}
}

func (x *CurrencyDetailsExtended) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *CurrencyDetailsExtended) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CurrencyDetailsExtended) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CurrencyDetailsExtended) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *CurrencyDetailsExtended) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CurrencyDetailsExtended) GetMetaInfo() *CurrencyMetaInfo {
	if x != nil {
		return x.MetaInfo
	}
	return nil
}

type CurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	Address        []byte `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CurrencyRequest) Reset() {
	*x = CurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyRequest) ProtoMessage() {}

func (x *CurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyRequest.ProtoReflect.Descriptor instead.
func (*CurrencyRequest) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{11}
}

func (x *CurrencyRequest) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *CurrencyRequest) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type CurrenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainNames []string `protobuf:"bytes,1,rep,name=blockchain_names,json=blockchainNames,proto3" json:"blockchain_names,omitempty"`
}

func (x *CurrenciesRequest) Reset() {
	*x = CurrenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrenciesRequest) ProtoMessage() {}

func (x *CurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrenciesRequest.ProtoReflect.Descriptor instead.
func (*CurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{12}
}

func (x *CurrenciesRequest) GetBlockchainNames() []string {
	if x != nil {
		return x.BlockchainNames
	}
	return nil
}

type CurrenciesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies []*CurrencyDetailsExtended `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *CurrenciesReply) Reset() {
	*x = CurrenciesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrenciesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrenciesReply) ProtoMessage() {}

func (x *CurrenciesReply) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrenciesReply.ProtoReflect.Descriptor instead.
func (*CurrenciesReply) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{13}
}

func (x *CurrenciesReply) GetCurrencies() []*CurrencyDetailsExtended {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type LiquidPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	Address        []byte `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *LiquidPoolRequest) Reset() {
	*x = LiquidPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiquidPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquidPoolRequest) ProtoMessage() {}

func (x *LiquidPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquidPoolRequest.ProtoReflect.Descriptor instead.
func (*LiquidPoolRequest) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{14}
}

func (x *LiquidPoolRequest) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *LiquidPoolRequest) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type LiquidPoolDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	Token0Address  []byte `protobuf:"bytes,2,opt,name=token0_address,json=token0Address,proto3" json:"token0_address,omitempty"`
	Token1Address  []byte `protobuf:"bytes,3,opt,name=token1_address,json=token1Address,proto3" json:"token1_address,omitempty"`
	Address        []byte `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Factory        []byte `protobuf:"bytes,5,opt,name=factory,proto3" json:"factory,omitempty"`
}

func (x *LiquidPoolDetails) Reset() {
	*x = LiquidPoolDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiquidPoolDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquidPoolDetails) ProtoMessage() {}

func (x *LiquidPoolDetails) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquidPoolDetails.ProtoReflect.Descriptor instead.
func (*LiquidPoolDetails) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{15}
}

func (x *LiquidPoolDetails) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *LiquidPoolDetails) GetToken0Address() []byte {
	if x != nil {
		return x.Token0Address
	}
	return nil
}

func (x *LiquidPoolDetails) GetToken1Address() []byte {
	if x != nil {
		return x.Token1Address
	}
	return nil
}

func (x *LiquidPoolDetails) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *LiquidPoolDetails) GetFactory() []byte {
	if x != nil {
		return x.Factory
	}
	return nil
}

type UsdPriceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	TokenAddress   []byte `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	BlockHeight    uint64 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Price          string `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"` // human readable float value
}

func (x *UsdPriceUpdate) Reset() {
	*x = UsdPriceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsdPriceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsdPriceUpdate) ProtoMessage() {}

func (x *UsdPriceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsdPriceUpdate.ProtoReflect.Descriptor instead.
func (*UsdPriceUpdate) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{16}
}

func (x *UsdPriceUpdate) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *UsdPriceUpdate) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *UsdPriceUpdate) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *UsdPriceUpdate) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type UsdPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	TokenAddress   []byte `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	BlockHeight    uint64 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *UsdPriceRequest) Reset() {
	*x = UsdPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsdPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsdPriceRequest) ProtoMessage() {}

func (x *UsdPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsdPriceRequest.ProtoReflect.Descriptor instead.
func (*UsdPriceRequest) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{17}
}

func (x *UsdPriceRequest) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *UsdPriceRequest) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *UsdPriceRequest) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type PriceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName    string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	BlockHeight       uint64 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BaseTokenAddress  []byte `protobuf:"bytes,5,opt,name=base_token_address,json=baseTokenAddress,proto3" json:"base_token_address,omitempty"`
	QuoteTokenAddress []byte `protobuf:"bytes,6,opt,name=quote_token_address,json=quoteTokenAddress,proto3" json:"quote_token_address,omitempty"`
	Price             string `protobuf:"bytes,7,opt,name=price,proto3" json:"price,omitempty"` // human readable float value
}

func (x *PriceUpdate) Reset() {
	*x = PriceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceUpdate) ProtoMessage() {}

func (x *PriceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceUpdate.ProtoReflect.Descriptor instead.
func (*PriceUpdate) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{18}
}

func (x *PriceUpdate) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *PriceUpdate) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *PriceUpdate) GetBaseTokenAddress() []byte {
	if x != nil {
		return x.BaseTokenAddress
	}
	return nil
}

func (x *PriceUpdate) GetQuoteTokenAddress() []byte {
	if x != nil {
		return x.QuoteTokenAddress
	}
	return nil
}

func (x *PriceUpdate) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type TokenHoldersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName  string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	ContractAddress []byte `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	PageToken       []byte `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize        int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *TokenHoldersRequest) Reset() {
	*x = TokenHoldersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenHoldersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenHoldersRequest) ProtoMessage() {}

func (x *TokenHoldersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenHoldersRequest.ProtoReflect.Descriptor instead.
func (*TokenHoldersRequest) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{19}
}

func (x *TokenHoldersRequest) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *TokenHoldersRequest) GetContractAddress() []byte {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *TokenHoldersRequest) GetPageToken() []byte {
	if x != nil {
		return x.PageToken
	}
	return nil
}

func (x *TokenHoldersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type TokenHoldersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName  string           `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	ContractAddress []byte           `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Holders         []*HolderBalance `protobuf:"bytes,3,rep,name=holders,proto3" json:"holders,omitempty"`
	NextPageToken   []byte           `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *TokenHoldersReply) Reset() {
	*x = TokenHoldersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenHoldersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenHoldersReply) ProtoMessage() {}

func (x *TokenHoldersReply) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenHoldersReply.ProtoReflect.Descriptor instead.
func (*TokenHoldersReply) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{20}
}

func (x *TokenHoldersReply) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *TokenHoldersReply) GetContractAddress() []byte {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *TokenHoldersReply) GetHolders() []*HolderBalance {
	if x != nil {
		return x.Holders
	}
	return nil
}

func (x *TokenHoldersReply) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type HolderBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HolderAddress []byte `protobuf:"bytes,1,opt,name=holder_address,json=holderAddress,proto3" json:"holder_address,omitempty"`
	Balance       []byte `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *HolderBalance) Reset() {
	*x = HolderBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_indexer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HolderBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HolderBalance) ProtoMessage() {}

func (x *HolderBalance) ProtoReflect() protoreflect.Message {
	mi := &file_token_indexer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HolderBalance.ProtoReflect.Descriptor instead.
func (*HolderBalance) Descriptor() ([]byte, []int) {
	return file_token_indexer_proto_rawDescGZIP(), []int{21}
}

func (x *HolderBalance) GetHolderAddress() []byte {
	if x != nil {
		return x.HolderAddress
	}
	return nil
}

func (x *HolderBalance) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

var File_token_indexer_proto protoreflect.FileDescriptor

var file_token_indexer_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x10,
	0x55, 0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x4f, 0x0a, 0x0e, 0x55, 0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61,
	0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x42, 0x79, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x83, 0x01,
	0x0a, 0x15, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x6b, 0x72,
	0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x72, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x73, 0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61,
	0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x07, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x0f, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73,
	0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x7e, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x65, 0x67, 0x12,
	0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2c, 0x0a, 0x03, 0x70, 0x65, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x67, 0x52, 0x03, 0x70, 0x65, 0x67,
	0x22, 0x9c, 0x01, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22,
	0x30, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x22, 0xea, 0x01, 0x0a, 0x17, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x44, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e,
	0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x54,
	0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x11, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e,
	0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x0a, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x11, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xbe, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x22, 0x97, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x55,
	0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0xcd, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22,
	0xa5, 0x01, 0x0a, 0x13, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a,
	0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x3e, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x50, 0x0a, 0x0d, 0x48, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2a, 0x31, 0x0a, 0x09, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45,
	0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x41, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x43, 0x32, 0x30, 0x10, 0x02, 0x2a, 0x2e,
	0x0a, 0x03, 0x50, 0x65, 0x67, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x47, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x50, 0x45, 0x47, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x53, 0x44, 0x5f, 0x50, 0x45, 0x47, 0x10, 0x02, 0x32, 0xa0,
	0x03, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x12,
	0x6e, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x12, 0x2d, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x42, 0x79, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x5a, 0x0a, 0x08, 0x55, 0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x6e,
	0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x0c, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x2e, 0x61, 0x6e,
	0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63,
	0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x5e, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12,
	0x28, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x6e, 0x6b, 0x72,
	0x73, 0x63, 0x61, 0x6e, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x72, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_token_indexer_proto_rawDescOnce sync.Once
	file_token_indexer_proto_rawDescData = file_token_indexer_proto_rawDesc
)

func file_token_indexer_proto_rawDescGZIP() []byte {
	file_token_indexer_proto_rawDescOnce.Do(func() {
		file_token_indexer_proto_rawDescData = protoimpl.X.CompressGZIP(file_token_indexer_proto_rawDescData)
	})
	return file_token_indexer_proto_rawDescData
}

var file_token_indexer_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_token_indexer_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_token_indexer_proto_goTypes = []interface{}{
	(TokenType)(0),                  // 0: ankrscan.tokenindexer.TokenType
	(Peg)(0),                        // 1: ankrscan.tokenindexer.Peg
	(*UsdPricesRequest)(nil),        // 2: ankrscan.tokenindexer.UsdPricesRequest
	(*UsdPricesReply)(nil),          // 3: ankrscan.tokenindexer.UsdPricesReply
	(*BalanceByHolderRequest)(nil),  // 4: ankrscan.tokenindexer.BalanceByHolderRequest
	(*BalancesDetailedReply)(nil),   // 5: ankrscan.tokenindexer.BalancesDetailedReply
	(*BalancesReply)(nil),           // 6: ankrscan.tokenindexer.BalancesReply
	(*Balance)(nil),                 // 7: ankrscan.tokenindexer.Balance
	(*BalanceDetailed)(nil),         // 8: ankrscan.tokenindexer.BalanceDetailed
	(*CurrencyPeg)(nil),             // 9: ankrscan.tokenindexer.CurrencyPeg
	(*CurrencyDetails)(nil),         // 10: ankrscan.tokenindexer.CurrencyDetails
	(*CurrencyMetaInfo)(nil),        // 11: ankrscan.tokenindexer.CurrencyMetaInfo
	(*CurrencyDetailsExtended)(nil), // 12: ankrscan.tokenindexer.CurrencyDetailsExtended
	(*CurrencyRequest)(nil),         // 13: ankrscan.tokenindexer.CurrencyRequest
	(*CurrenciesRequest)(nil),       // 14: ankrscan.tokenindexer.CurrenciesRequest
	(*CurrenciesReply)(nil),         // 15: ankrscan.tokenindexer.CurrenciesReply
	(*LiquidPoolRequest)(nil),       // 16: ankrscan.tokenindexer.LiquidPoolRequest
	(*LiquidPoolDetails)(nil),       // 17: ankrscan.tokenindexer.LiquidPoolDetails
	(*UsdPriceUpdate)(nil),          // 18: ankrscan.tokenindexer.UsdPriceUpdate
	(*UsdPriceRequest)(nil),         // 19: ankrscan.tokenindexer.UsdPriceRequest
	(*PriceUpdate)(nil),             // 20: ankrscan.tokenindexer.PriceUpdate
	(*TokenHoldersRequest)(nil),     // 21: ankrscan.tokenindexer.TokenHoldersRequest
	(*TokenHoldersReply)(nil),       // 22: ankrscan.tokenindexer.TokenHoldersReply
	(*HolderBalance)(nil),           // 23: ankrscan.tokenindexer.HolderBalance
}
var file_token_indexer_proto_depIdxs = []int32{
	19, // 0: ankrscan.tokenindexer.UsdPricesRequest.requests:type_name -> ankrscan.tokenindexer.UsdPriceRequest
	18, // 1: ankrscan.tokenindexer.UsdPricesReply.prices:type_name -> ankrscan.tokenindexer.UsdPriceUpdate
	8,  // 2: ankrscan.tokenindexer.BalancesDetailedReply.balances:type_name -> ankrscan.tokenindexer.BalanceDetailed
	7,  // 3: ankrscan.tokenindexer.BalancesReply.balances:type_name -> ankrscan.tokenindexer.Balance
	0,  // 4: ankrscan.tokenindexer.BalanceDetailed.type:type_name -> ankrscan.tokenindexer.TokenType
	1,  // 5: ankrscan.tokenindexer.CurrencyPeg.peg:type_name -> ankrscan.tokenindexer.Peg
	11, // 6: ankrscan.tokenindexer.CurrencyDetailsExtended.meta_info:type_name -> ankrscan.tokenindexer.CurrencyMetaInfo
	12, // 7: ankrscan.tokenindexer.CurrenciesReply.currencies:type_name -> ankrscan.tokenindexer.CurrencyDetailsExtended
	23, // 8: ankrscan.tokenindexer.TokenHoldersReply.holders:type_name -> ankrscan.tokenindexer.HolderBalance
	4,  // 9: ankrscan.tokenindexer.TokenIndexer.BalanceByHolder:input_type -> ankrscan.tokenindexer.BalanceByHolderRequest
	2,  // 10: ankrscan.tokenindexer.TokenIndexer.UsdPrice:input_type -> ankrscan.tokenindexer.UsdPricesRequest
	21, // 11: ankrscan.tokenindexer.TokenIndexer.TokenHolders:input_type -> ankrscan.tokenindexer.TokenHoldersRequest
	14, // 12: ankrscan.tokenindexer.TokenIndexer.Currencies:input_type -> ankrscan.tokenindexer.CurrenciesRequest
	5,  // 13: ankrscan.tokenindexer.TokenIndexer.BalanceByHolder:output_type -> ankrscan.tokenindexer.BalancesDetailedReply
	3,  // 14: ankrscan.tokenindexer.TokenIndexer.UsdPrice:output_type -> ankrscan.tokenindexer.UsdPricesReply
	22, // 15: ankrscan.tokenindexer.TokenIndexer.TokenHolders:output_type -> ankrscan.tokenindexer.TokenHoldersReply
	15, // 16: ankrscan.tokenindexer.TokenIndexer.Currencies:output_type -> ankrscan.tokenindexer.CurrenciesReply
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_token_indexer_proto_init() }
func file_token_indexer_proto_init() {
	if File_token_indexer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_token_indexer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsdPricesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsdPricesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceByHolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancesDetailedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceDetailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyPeg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyDetailsExtended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrenciesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiquidPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiquidPoolDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsdPriceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsdPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenHoldersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenHoldersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_indexer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HolderBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_token_indexer_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_token_indexer_proto_goTypes,
		DependencyIndexes: file_token_indexer_proto_depIdxs,
		EnumInfos:         file_token_indexer_proto_enumTypes,
		MessageInfos:      file_token_indexer_proto_msgTypes,
	}.Build()
	File_token_indexer_proto = out.File
	file_token_indexer_proto_rawDesc = nil
	file_token_indexer_proto_goTypes = nil
	file_token_indexer_proto_depIdxs = nil
}
