// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: node-proxy.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BlockchainName                 string `protobuf:"bytes,2,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	NodeUrl                        string `protobuf:"bytes,3,opt,name=node_url,json=nodeUrl,proto3" json:"node_url,omitempty"`
	HistoricalStateRetentionBlocks uint64 `protobuf:"varint,4,opt,name=historical_state_retention_blocks,json=historicalStateRetentionBlocks,proto3" json:"historical_state_retention_blocks,omitempty"` // 0 for archive node
	ParallelCallsBatch             uint64 `protobuf:"varint,5,opt,name=parallel_calls_batch,json=parallelCallsBatch,proto3" json:"parallel_calls_batch,omitempty"`                                       // how many contract calls will be done in one JSON-RPC batch
	ParallelCallsWorkers           uint64 `protobuf:"varint,6,opt,name=parallel_calls_workers,json=parallelCallsWorkers,proto3" json:"parallel_calls_workers,omitempty"`                                 // how many parallel workers will send batches to the node
}

func (x *NodeConfig) Reset() {
	*x = NodeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeConfig) ProtoMessage() {}

func (x *NodeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeConfig.ProtoReflect.Descriptor instead.
func (*NodeConfig) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *NodeConfig) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NodeConfig) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *NodeConfig) GetNodeUrl() string {
	if x != nil {
		return x.NodeUrl
	}
	return ""
}

func (x *NodeConfig) GetHistoricalStateRetentionBlocks() uint64 {
	if x != nil {
		return x.HistoricalStateRetentionBlocks
	}
	return 0
}

func (x *NodeConfig) GetParallelCallsBatch() uint64 {
	if x != nil {
		return x.ParallelCallsBatch
	}
	return 0
}

func (x *NodeConfig) GetParallelCallsWorkers() uint64 {
	if x != nil {
		return x.ParallelCallsWorkers
	}
	return 0
}

type NodeConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NodeConfigsRequest) Reset() {
	*x = NodeConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeConfigsRequest) ProtoMessage() {}

func (x *NodeConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeConfigsRequest.ProtoReflect.Descriptor instead.
func (*NodeConfigsRequest) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{1}
}

type NodeConfigsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeConfigs []*NodeConfig `protobuf:"bytes,1,rep,name=node_configs,json=nodeConfigs,proto3" json:"node_configs,omitempty"`
}

func (x *NodeConfigsReply) Reset() {
	*x = NodeConfigsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeConfigsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeConfigsReply) ProtoMessage() {}

func (x *NodeConfigsReply) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeConfigsReply.ProtoReflect.Descriptor instead.
func (*NodeConfigsReply) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *NodeConfigsReply) GetNodeConfigs() []*NodeConfig {
	if x != nil {
		return x.NodeConfigs
	}
	return nil
}

type UpdateNodeConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeConfig *NodeConfig `protobuf:"bytes,1,opt,name=node_config,json=nodeConfig,proto3" json:"node_config,omitempty"`
}

func (x *UpdateNodeConfigRequest) Reset() {
	*x = UpdateNodeConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeConfigRequest) ProtoMessage() {}

func (x *UpdateNodeConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeConfigRequest) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateNodeConfigRequest) GetNodeConfig() *NodeConfig {
	if x != nil {
		return x.NodeConfig
	}
	return nil
}

type UpdateNodeConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNodeConfigReply) Reset() {
	*x = UpdateNodeConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeConfigReply) ProtoMessage() {}

func (x *UpdateNodeConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeConfigReply.ProtoReflect.Descriptor instead.
func (*UpdateNodeConfigReply) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{4}
}

type CallContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName  string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	ContractAddress []byte `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Argument        []byte `protobuf:"bytes,3,opt,name=argument,proto3" json:"argument,omitempty"`
	BlockHeight     uint64 `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Description     string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CallContractRequest) Reset() {
	*x = CallContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractRequest) ProtoMessage() {}

func (x *CallContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractRequest.ProtoReflect.Descriptor instead.
func (*CallContractRequest) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *CallContractRequest) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *CallContractRequest) GetContractAddress() []byte {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *CallContractRequest) GetArgument() []byte {
	if x != nil {
		return x.Argument
	}
	return nil
}

func (x *CallContractRequest) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *CallContractRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CallContractBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls         []*CallContractRequest `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
	EnableCaching bool                   `protobuf:"varint,2,opt,name=enable_caching,json=enableCaching,proto3" json:"enable_caching,omitempty"`
}

func (x *CallContractBatchRequest) Reset() {
	*x = CallContractBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallContractBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractBatchRequest) ProtoMessage() {}

func (x *CallContractBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractBatchRequest.ProtoReflect.Descriptor instead.
func (*CallContractBatchRequest) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *CallContractBatchRequest) GetCalls() []*CallContractRequest {
	if x != nil {
		return x.Calls
	}
	return nil
}

func (x *CallContractBatchRequest) GetEnableCaching() bool {
	if x != nil {
		return x.EnableCaching
	}
	return false
}

type BalanceOfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockchainName string `protobuf:"bytes,1,opt,name=blockchain_name,json=blockchainName,proto3" json:"blockchain_name,omitempty"`
	Address        []byte `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *BalanceOfRequest) Reset() {
	*x = BalanceOfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceOfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceOfRequest) ProtoMessage() {}

func (x *BalanceOfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceOfRequest.ProtoReflect.Descriptor instead.
func (*BalanceOfRequest) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{7}
}

func (x *BalanceOfRequest) GetBlockchainName() string {
	if x != nil {
		return x.BlockchainName
	}
	return ""
}

func (x *BalanceOfRequest) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type CallContractBatchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CallContractReply `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *CallContractBatchReply) Reset() {
	*x = CallContractBatchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallContractBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractBatchReply) ProtoMessage() {}

func (x *CallContractBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractBatchReply.ProtoReflect.Descriptor instead.
func (*CallContractBatchReply) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{8}
}

func (x *CallContractBatchReply) GetResults() []*CallContractReply {
	if x != nil {
		return x.Results
	}
	return nil
}

type BalanceOfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BalanceOfResponse) Reset() {
	*x = BalanceOfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceOfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceOfResponse) ProtoMessage() {}

func (x *BalanceOfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceOfResponse.ProtoReflect.Descriptor instead.
func (*BalanceOfResponse) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{9}
}

func (x *BalanceOfResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type CallContractReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      []byte `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error       string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Success     bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	BlockHeight uint64 `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *CallContractReply) Reset() {
	*x = CallContractReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_proxy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallContractReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractReply) ProtoMessage() {}

func (x *CallContractReply) ProtoReflect() protoreflect.Message {
	mi := &file_node_proxy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractReply.ProtoReflect.Descriptor instead.
func (*CallContractReply) Descriptor() ([]byte, []int) {
	return file_node_proxy_proto_rawDescGZIP(), []int{10}
}

func (x *CallContractReply) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CallContractReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CallContractReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CallContractReply) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

var File_node_proxy_proto protoreflect.FileDescriptor

var file_node_proxy_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x1a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2d, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x02, 0x0a, 0x0a, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x49, 0x0a, 0x21,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x61, 0x6c,
	0x6c, 0x65, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x43,
	0x61, 0x6c, 0x6c, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x72,
	0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x70, 0x61, 0x72, 0x61, 0x6c,
	0x6c, 0x65, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x22,
	0x14, 0x0a, 0x12, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0c, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x5a, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61,
	0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0xca, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80,
	0x01, 0x0a, 0x18, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x63,
	0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x6b,
	0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x22, 0x55, 0x0a, 0x10, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x59, 0x0a, 0x16, 0x43, 0x61, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x22, 0x29, 0x0a, 0x11, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7e,
	0x0a, 0x11, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x32, 0xee,
	0x04, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x5b, 0x0a, 0x0b,
	0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x6e,
	0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x2e,
	0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x6e, 0x6b,
	0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x63, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61,
	0x6e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6f, 0x0a, 0x11, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x2d, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x68, 0x0a, 0x0c, 0x43,
	0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x2c, 0x2e, 0x61, 0x6e,
	0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x6e, 0x6b, 0x72,
	0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x09, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x4f, 0x66, 0x12, 0x24, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f,
	0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x6e, 0x6b, 0x72, 0x73,
	0x63, 0x61, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_node_proxy_proto_rawDescOnce sync.Once
	file_node_proxy_proto_rawDescData = file_node_proxy_proto_rawDesc
)

func file_node_proxy_proto_rawDescGZIP() []byte {
	file_node_proxy_proto_rawDescOnce.Do(func() {
		file_node_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_proxy_proto_rawDescData)
	})
	return file_node_proxy_proto_rawDescData
}

var file_node_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_node_proxy_proto_goTypes = []interface{}{
	(*NodeConfig)(nil),               // 0: ankrscan.nodeproxy.NodeConfig
	(*NodeConfigsRequest)(nil),       // 1: ankrscan.nodeproxy.NodeConfigsRequest
	(*NodeConfigsReply)(nil),         // 2: ankrscan.nodeproxy.NodeConfigsReply
	(*UpdateNodeConfigRequest)(nil),  // 3: ankrscan.nodeproxy.UpdateNodeConfigRequest
	(*UpdateNodeConfigReply)(nil),    // 4: ankrscan.nodeproxy.UpdateNodeConfigReply
	(*CallContractRequest)(nil),      // 5: ankrscan.nodeproxy.CallContractRequest
	(*CallContractBatchRequest)(nil), // 6: ankrscan.nodeproxy.CallContractBatchRequest
	(*BalanceOfRequest)(nil),         // 7: ankrscan.nodeproxy.BalanceOfRequest
	(*CallContractBatchReply)(nil),   // 8: ankrscan.nodeproxy.CallContractBatchReply
	(*BalanceOfResponse)(nil),        // 9: ankrscan.nodeproxy.BalanceOfResponse
	(*CallContractReply)(nil),        // 10: ankrscan.nodeproxy.CallContractReply
	(*BlockByNumberRequest)(nil),     // 11: ankrscan.blockstore.BlockByNumberRequest
	(*LatestBlockHeaderRequest)(nil), // 12: ankrscan.blockstore.LatestBlockHeaderRequest
	(*BlockByNumberReply)(nil),       // 13: ankrscan.blockstore.BlockByNumberReply
	(*LatestBlockHeaderReply)(nil),   // 14: ankrscan.blockstore.LatestBlockHeaderReply
}
var file_node_proxy_proto_depIdxs = []int32{
	0,  // 0: ankrscan.nodeproxy.NodeConfigsReply.node_configs:type_name -> ankrscan.nodeproxy.NodeConfig
	0,  // 1: ankrscan.nodeproxy.UpdateNodeConfigRequest.node_config:type_name -> ankrscan.nodeproxy.NodeConfig
	5,  // 2: ankrscan.nodeproxy.CallContractBatchRequest.calls:type_name -> ankrscan.nodeproxy.CallContractRequest
	10, // 3: ankrscan.nodeproxy.CallContractBatchReply.results:type_name -> ankrscan.nodeproxy.CallContractReply
	1,  // 4: ankrscan.nodeproxy.NodeProxy.NodeConfigs:input_type -> ankrscan.nodeproxy.NodeConfigsRequest
	3,  // 5: ankrscan.nodeproxy.NodeProxy.UpdateNodeConfig:input_type -> ankrscan.nodeproxy.UpdateNodeConfigRequest
	11, // 6: ankrscan.nodeproxy.NodeProxy.BlockByNumber:input_type -> ankrscan.blockstore.BlockByNumberRequest
	12, // 7: ankrscan.nodeproxy.NodeProxy.LatestBlockHeader:input_type -> ankrscan.blockstore.LatestBlockHeaderRequest
	6,  // 8: ankrscan.nodeproxy.NodeProxy.CallContract:input_type -> ankrscan.nodeproxy.CallContractBatchRequest
	7,  // 9: ankrscan.nodeproxy.NodeProxy.BalanceOf:input_type -> ankrscan.nodeproxy.BalanceOfRequest
	2,  // 10: ankrscan.nodeproxy.NodeProxy.NodeConfigs:output_type -> ankrscan.nodeproxy.NodeConfigsReply
	4,  // 11: ankrscan.nodeproxy.NodeProxy.UpdateNodeConfig:output_type -> ankrscan.nodeproxy.UpdateNodeConfigReply
	13, // 12: ankrscan.nodeproxy.NodeProxy.BlockByNumber:output_type -> ankrscan.blockstore.BlockByNumberReply
	14, // 13: ankrscan.nodeproxy.NodeProxy.LatestBlockHeader:output_type -> ankrscan.blockstore.LatestBlockHeaderReply
	8,  // 14: ankrscan.nodeproxy.NodeProxy.CallContract:output_type -> ankrscan.nodeproxy.CallContractBatchReply
	9,  // 15: ankrscan.nodeproxy.NodeProxy.BalanceOf:output_type -> ankrscan.nodeproxy.BalanceOfResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_node_proxy_proto_init() }
func file_node_proxy_proto_init() {
	if File_node_proxy_proto != nil {
		return
	}
	file_block_store_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_node_proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeConfigsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallContractBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceOfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallContractBatchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceOfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_proxy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallContractReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_proxy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_proxy_proto_goTypes,
		DependencyIndexes: file_node_proxy_proto_depIdxs,
		MessageInfos:      file_node_proxy_proto_msgTypes,
	}.Build()
	File_node_proxy_proto = out.File
	file_node_proxy_proto_rawDesc = nil
	file_node_proxy_proto_goTypes = nil
	file_node_proxy_proto_depIdxs = nil
}
