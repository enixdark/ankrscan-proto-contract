syntax = "proto3";

package com.clover.extractor;

option java_package = "com.clover.proto";
option java_outer_classname = "ExtractorProto";

option go_package = ".;proto";

//  ______ _______ _    _
// |  ____|__   __| |  | |
// | |__     | |  | |__| |
// |  __|    | |  |  __  |
// | |____   | |  | |  | |
// |______|  |_|  |_|  |_|
//
//

message EthTransaction {
  string transaction_hash = 1;
  uint64 block_height = 3;
  string gas_price = 4;
  uint64 gas_limit = 5;
  uint64 nonce = 6;
  string transaction_fee = 7;
  string value = 8;
  string from_address = 9;
  string to_address = 10;
  uint64 timestamp = 11;
  string raw_input_data = 12;
  uint32 transaction_index = 13;
  uint64 gas_used = 14;
  uint64 status = 15;
}


message EthBlockHeader {
  uint64 block_height = 1;
  uint64 timestamp = 2;
  string mine_address = 4;
  uint64 size = 5;
  uint64 gas_used = 6;
  string extra_data = 7;
  string block_hash = 8;
  string parent_hash = 9;
  string sha3_uncles = 10;
  string state_root = 11;
  uint64 transactions_count = 12;
}


message EthBlock {
  repeated EthTransaction txs = 1;
  EthBlockHeader header = 2;
}

//  ____ _______ _____
// |  _ \__   __/ ____|
// | |_) | | | | |
// |  _ <  | | | |
// | |_) | | | | |____
// |____/  |_|  \_____|
//

message BtcBlockHeader {
  uint64 block_height = 1;
  uint64 timestamp = 2;
  string block_hash = 3;
  string parent_hash = 4;
  string merkle_root = 5;
  string bits = 6;
  uint32 nonce = 7;
  double difficulty = 9;
  int32 size = 10;
  int32 weight = 11;
  string version = 12;
  uint64 transactions_count = 13;
}

message BtcTransaction {
  message ScriptSig {
      string asm = 1;
      string hex = 2;
  }

  message ScriptPubKeyResult {
    string asm = 1;
    string hex = 2;
    int32 req_sigs = 3;
    string type = 4;
    repeated string addresses = 5;
  }

  message Vin {
    string coinbase = 1;
    string txid = 2;
    uint32 vout = 3;
    ScriptSig script_sig = 4;
    uint32 sequence = 5;
    repeated string witness = 6;
  }

  message Vout {
    double value = 1;
    uint32 n = 2;
    ScriptPubKeyResult script_pub_key = 3;
  }

  string transaction_hash = 1;
  uint64 block_height = 2;
  uint64 timestamp = 3;
  int32 size = 4;
  int32 weight = 5;
  repeated Vin vin = 6;
  repeated Vout vout = 7;
}

message BtcBlock {
  repeated BtcTransaction txs = 1;
  BtcBlockHeader header = 2;
}

/**
 *  _  __      __ _
 * | |/ /__ _ / _| | ____ _
 * | ' // _` | |_| |/ / _` |
 * | . \ (_| |  _|   < (_| |
 * |_|\_\__,_|_| |_|\_\__,_|
 *
 **/

/**
 * Topic: v1.blockchainextractor.blockchanged
 */
message BlockChanged {
  string blockchain_name = 1;
  oneof block {
    EthBlock eth_block = 2;
    BtcBlock btc_block = 3;
  }
}